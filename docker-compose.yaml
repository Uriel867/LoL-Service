services:
  api:
    build: api/
    entrypoint: uvicorn main:app --host 0.0.0.0 --port 8080 --reload
    volumes:
      - ./api/src:/workspace/src
    # don't start if overfast api hasn't started yet
    depends_on:
      mongodb:
        condition: service_started
      postgres:
        condition: service_started
    ports:
      - 81:8080
    networks:
      - lol_api_network
   
    env_file:
      - ./api/.env
    # checking service is up every 5 seconds
    healthcheck:
      test: ["CMD-SHELL", "curl http://0.0.0.0:8080/health || exit 1"]
      interval: 60s
      timeout: 5s
    env_file:
      - .env.global
      - ./api/.env
    # scrape every week
    # healthcheck:
    #   test: ["CMD-SHELL", "curl http://0.0.0.0:8080/scrape || exit 1"]
    #   interval: 10080s # 1 week
    #   timeout: 60s
    
  mongodb:
    build: infra/mongodb
    container_name: mongodb
    ports:
      - "27017:27017"
    # volumes:
      # - ./data/db:/data/db
    networks:
      - lol_api_network

  postgres:
    build: infra/postgres
    ports:
      - 5555:5432
    env_file:
      - .env.global
      - ./infra/postgres/.env
    networks:
      - lol_api_network

  dataloader:
    build: infra/dataloader
    entrypoint: sh loader.sh
    healthcheck:
      test: ["CMD-SHELL", "sh /workspace/loader.sh || exit 1"]
      interval: 8640s
      timeout: 30s

    environment:
      EXTRACT_URL: http://api:8080/scrape
      LOAD_URL: http://api:8080/scrape/data

networks:
  lol_api_network:
    driver: bridge
